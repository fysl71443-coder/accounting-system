#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
ูุญุต ูููุงุช ุดุงุดุฉ ุงููุตุฑููุงุช
Check Expenses Screen Files
"""

import os
import sys
from pathlib import Path

def check_expenses_files():
    """ูุญุต ูุฌูุฏ ูููุงุช ุดุงุดุฉ ุงููุตุฑููุงุช"""
    print("๐ ูุญุต ูููุงุช ุดุงุดุฉ ุงููุตุฑููุงุช:")
    print("=" * 50)
    
    # ุงููููุงุช ุงููุทููุจุฉ
    required_files = [
        ('templates/expenses.html', 'ูุงูุจ ุดุงุดุฉ ุงููุตุฑููุงุช'),
        ('templates/new_expense.html', 'ูุงูุจ ุฅุถุงูุฉ ูุตุฑูู ุฌุฏูุฏ'),
        ('static/css/unified-design.css', 'ููู ุงูุชุตููู'),
        ('static/js/expenses.js', 'ููู JavaScript ูููุตุฑููุงุช')
    ]
    
    existing_files = 0
    missing_files = []
    
    for file_path, description in required_files:
        if Path(file_path).exists():
            print(f"   โ {description}: {file_path}")
            existing_files += 1
        else:
            print(f"   โ {description}: {file_path} - ููููุฏ")
            missing_files.append((file_path, description))
    
    print(f"\n๐ ุงููุชูุฌุฉ: {existing_files}/{len(required_files)} ููู ููุฌูุฏ")
    
    return existing_files, missing_files

def check_expenses_routes():
    """ูุญุต routes ุงููุตุฑููุงุช ูู app.py"""
    print("\n๐ ูุญุต routes ุงููุตุฑููุงุช ูู app.py:")
    print("=" * 50)
    
    if not Path('app.py').exists():
        print("โ ููู app.py ุบูุฑ ููุฌูุฏ")
        return False
    
    with open('app.py', 'r', encoding='utf-8') as f:
        content = f.read()
    
    # Routes ุงููุทููุจุฉ
    required_routes = [
        ('@app.route(\'/expenses\')', 'ุดุงุดุฉ ุงููุตุฑููุงุช ุงูุฑุฆูุณูุฉ'),
        ('@app.route(\'/expenses/new\')', 'ุตูุญุฉ ุฅุถุงูุฉ ูุตุฑูู ุฌุฏูุฏ'),
        ('@app.route(\'/api/expenses/save\')', 'API ุญูุธ ุงููุตุฑูู'),
        ('@app.route(\'/api/expenses/list\')', 'API ุฌูุจ ูุงุฆูุฉ ุงููุตุฑููุงุช'),
        ('def expenses()', 'ูุธููุฉ ุดุงุดุฉ ุงููุตุฑููุงุช'),
        ('class Expense(', 'ูููุฐุฌ ุงููุตุฑูู')
    ]
    
    found_routes = 0
    missing_routes = []
    
    for route_pattern, description in required_routes:
        if route_pattern in content:
            print(f"   โ {description}: ููุฌูุฏ")
            found_routes += 1
        else:
            print(f"   โ {description}: ููููุฏ")
            missing_routes.append((route_pattern, description))
    
    print(f"\n๐ ุงููุชูุฌุฉ: {found_routes}/{len(required_routes)} route ููุฌูุฏ")
    
    return found_routes, missing_routes

def check_expenses_database():
    """ูุญุต ุฌุฏูู ุงููุตุฑููุงุช ูู ูุงุนุฏุฉ ุงูุจูุงูุงุช"""
    print("\n๐๏ธ ูุญุต ุฌุฏูู ุงููุตุฑููุงุช:")
    print("=" * 50)
    
    if not Path('accounting.db').exists():
        print("โ ูุงุนุฏุฉ ุงูุจูุงูุงุช ุบูุฑ ููุฌูุฏุฉ")
        return False
    
    try:
        import sqlite3
        conn = sqlite3.connect('accounting.db')
        cursor = conn.cursor()
        
        # ูุญุต ูุฌูุฏ ุฌุฏูู expenses
        cursor.execute("SELECT name FROM sqlite_master WHERE type='table' AND name='expenses'")
        if cursor.fetchone():
            print("   โ ุฌุฏูู expenses ููุฌูุฏ")
            
            # ูุญุต ูููู ุงูุฌุฏูู
            cursor.execute("PRAGMA table_info(expenses)")
            columns = cursor.fetchall()
            
            print("   ๐ ุฃุนูุฏุฉ ุงูุฌุฏูู:")
            for col in columns:
                col_name = col[1]
                col_type = col[2]
                print(f"      - {col_name}: {col_type}")
            
            # ูุญุต ุนุฏุฏ ุงูุณุฌูุงุช
            cursor.execute("SELECT COUNT(*) FROM expenses")
            count = cursor.fetchone()[0]
            print(f"   ๐ ุนุฏุฏ ุงููุตุฑููุงุช: {count}")
            
        else:
            print("   โ ุฌุฏูู expenses ุบูุฑ ููุฌูุฏ")
            return False
        
        conn.close()
        return True
        
    except Exception as e:
        print(f"   โ ุฎุทุฃ ูู ูุญุต ูุงุนุฏุฉ ุงูุจูุงูุงุช: {e}")
        return False

def analyze_expenses_template():
    """ุชุญููู ูุงูุจ ุงููุตุฑููุงุช"""
    print("\n๐จ ุชุญููู ูุงูุจ ุงููุตุฑููุงุช:")
    print("=" * 50)
    
    template_path = Path('templates/expenses.html')
    if not template_path.exists():
        print("โ ูุงูุจ expenses.html ุบูุฑ ููุฌูุฏ")
        return False
    
    with open(template_path, 'r', encoding='utf-8') as f:
        content = f.read()
    
    # ุงูุนูุงุตุฑ ุงููุทููุจุฉ ูู ุงููุงูุจ
    required_elements = [
        ('table', 'ุฌุฏูู ุงููุตุฑููุงุช'),
        ('btn-success', 'ุฒุฑ ุฅุถุงูุฉ ุฌุฏูุฏ'),
        ('btn-primary', 'ุฒุฑ ุงูุจุญุซ'),
        ('modal', 'ูุงูุฐุฉ ููุจุซูุฉ'),
        ('form', 'ูููุฐุฌ'),
        ('expenses-table', 'ูุนุฑู ุฌุฏูู ุงููุตุฑููุงุช'),
        ('loadExpensesData', 'ูุธููุฉ ุชุญููู ุงูุจูุงูุงุช'),
        ('saveExpense', 'ูุธููุฉ ุญูุธ ุงููุตุฑูู')
    ]
    
    found_elements = 0
    for element, description in required_elements:
        if element in content:
            print(f"   โ {description}: ููุฌูุฏ")
            found_elements += 1
        else:
            print(f"   โ {description}: ููููุฏ")
    
    print(f"\n๐ ุงููุชูุฌุฉ: {found_elements}/{len(required_elements)} ุนูุตุฑ ููุฌูุฏ")
    
    return found_elements >= len(required_elements) * 0.7

def generate_expenses_fix_recommendations():
    """ุฅูุดุงุก ุชูุตูุงุช ูุฅุตูุงุญ ุงููุดุงูู"""
    print("\n๐ก ุชูุตูุงุช ุงูุฅุตูุงุญ:")
    print("=" * 50)
    
    recommendations = [
        "๐ง ุฅูุดุงุก API endpoints ุงูููููุฏุฉ:",
        "   - /api/expenses/list ูุฌูุจ ูุงุฆูุฉ ุงููุตุฑููุงุช",
        "   - /api/expenses/categories ูุฌูุจ ูุฆุงุช ุงููุตุฑููุงุช",
        "   - /expenses/new ูุตูุญุฉ ุฅุถุงูุฉ ูุตุฑูู ุฌุฏูุฏ",
        "",
        "๐ ุฅูุดุงุก ุงูููุงูุจ ุงูููููุฏุฉ:",
        "   - templates/new_expense.html ูุฅุถุงูุฉ ูุตุฑูู ุฌุฏูุฏ",
        "",
        "๐ ุฅุตูุงุญ ูุดุงูู API:",
        "   - ุฅุตูุงุญ Content-Type ูู API ุญูุธ ุงููุตุฑูู",
        "   - ุฅุถุงูุฉ ูุนุงูุฌุฉ JSON ูู ุงูุทูุจุงุช",
        "",
        "๐จ ุชุญุณูู ุงููุงุฌูุฉ:",
        "   - ุฅุถุงูุฉ ุฒุฑ ุงูุชุตุฏูุฑ",
        "   - ุฑุจุท ุงูุฃุฒุฑุงุฑ ุจุงููุธุงุฆู ุงูุตุญูุญุฉ",
        "",
        "๐๏ธ ูุญุต ูุงุนุฏุฉ ุงูุจูุงูุงุช:",
        "   - ุงูุชุฃูุฏ ูู ูุฌูุฏ ุฌุฏูู expenses",
        "   - ุฅุถุงูุฉ ุงูุจูุงูุงุช ุงูุชุฌุฑูุจูุฉ ุฅุฐุง ูุฒู ุงูุฃูุฑ"
    ]
    
    for recommendation in recommendations:
        print(recommendation)

def main():
    """ุงููุธููุฉ ุงูุฑุฆูุณูุฉ"""
    print("=" * 80)
    print("๐ ูุญุต ูููุงุช ูููููุงุช ุดุงุดุฉ ุงููุตุฑููุงุช")
    print("๐ Check Expenses Screen Files and Components")
    print("=" * 80)
    
    # ูุญุต ุงููููุงุช
    existing_files, missing_files = check_expenses_files()
    
    # ูุญุต Routes
    found_routes, missing_routes = check_expenses_routes()
    
    # ูุญุต ูุงุนุฏุฉ ุงูุจูุงูุงุช
    db_status = check_expenses_database()
    
    # ุชุญููู ุงููุงูุจ
    template_status = analyze_expenses_template()
    
    # ุงููุชูุฌุฉ ุงูุฅุฌูุงููุฉ
    print("\n" + "=" * 80)
    print("๐ ุงููุชูุฌุฉ ุงูุฅุฌูุงููุฉ:")
    print("=" * 80)
    
    total_score = 0
    max_score = 4
    
    if existing_files >= 2:
        total_score += 1
        print("โ ุงููููุงุช: ููุจูู")
    else:
        print("โ ุงููููุงุช: ูุญุชุงุฌ ุนูู")
    
    if found_routes >= 3:
        total_score += 1
        print("โ Routes: ููุจูู")
    else:
        print("โ Routes: ูุญุชุงุฌ ุนูู")
    
    if db_status:
        total_score += 1
        print("โ ูุงุนุฏุฉ ุงูุจูุงูุงุช: ุชุนูู")
    else:
        print("โ ูุงุนุฏุฉ ุงูุจูุงูุงุช: ูุดููุฉ")
    
    if template_status:
        total_score += 1
        print("โ ุงููุงูุจ: ููุจูู")
    else:
        print("โ ุงููุงูุจ: ูุญุชุงุฌ ุชุญุณูู")
    
    success_rate = (total_score / max_score) * 100
    print(f"\n๐ฏ ูุนุฏู ุงููุฌุงุญ: {success_rate:.1f}%")
    
    if success_rate >= 75:
        print("๐ข ุดุงุดุฉ ุงููุตุฑููุงุช ูู ุญุงูุฉ ุฌูุฏุฉ")
    elif success_rate >= 50:
        print("๐ก ุดุงุดุฉ ุงููุตุฑููุงุช ุชุญุชุงุฌ ุชุญุณููุงุช")
    else:
        print("๐ด ุดุงุดุฉ ุงููุตุฑููุงุช ุชุญุชุงุฌ ุนูู ูุจูุฑ")
    
    # ุงูุชูุตูุงุช
    generate_expenses_fix_recommendations()
    
    print("\n" + "=" * 80)
    print("โ ุงูุชูู ูุญุต ูููุงุช ุดุงุดุฉ ุงููุตุฑููุงุช")
    print("โ Expenses screen files check completed")
    print("=" * 80)

if __name__ == "__main__":
    main()
